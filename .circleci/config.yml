version: 2.1

parameters:
  ref_to_build:
    type: string
    default: ""
  github_actions_release_upload_url:
    type: string
    default: ""

jobs:
  build:
    machine:
      # Fixed to this version due to issues with Git LFS
      # https://discuss.circleci.com/t/git-lfs-broken-in-recent-ubuntu-20-04-machine-images-arm64/46473/1
      image: ubuntu-2004:202101-01
    resource_class: arm.medium
    steps:
      - run:
          name: "Setup environment variables"
          command: |
            SIGNAL_DESKTOP_TAG="<< pipeline.parameters.ref_to_build >>"
            echo 'export SIGNAL_DESKTOP_TAG="'$SIGNAL_DESKTOP_TAG'"' >> "$BASH_ENV"
            echo 'export SIGNAL_DESKTOP_VERSION="'${SIGNAL_DESKTOP_TAG#"v"}'"' >> "$BASH_ENV"
            echo 'export GITHUB_ACTIONS_RELEASE_UPLOAD_URL="<< pipeline.parameters.github_actions_release_upload_url >>"' >> "$BASH_ENV"
      - run: |
          echo "Running pipeline with the following environment variables:"
          echo "SIGNAL_DESKTOP_TAG=$SIGNAL_DESKTOP_TAG"
          echo "SIGNAL_DESKTOP_VERSION=$SIGNAL_DESKTOP_VERSION"
          echo "GITHUB_ACTIONS_RELEASE_UPLOAD_URL=$GITHUB_ACTIONS_RELEASE_UPLOAD_URL"
      - run: git clone --depth 1 --branch $SIGNAL_DESKTOP_TAG https://github.com/signalapp/Signal-Desktop .
      - run: git clone https://github.com/dennisameling/signal-desktop-automation ./tmp-automation-release-scripts
      - run:
          # This uses the .nvmrc from Signal Desktop to determine the right version to use
          name: Install NodeJS
          command: |
            nvm install
            nvm use
            nvm alias default $(nvm current)
            npm install --location=global yarn
      - run:
          # https://discuss.circleci.com/t/changed-behaviour-of-nvm-alias-after-migrating-to-new-machine-image/42965
          name: "Enforce nvm use default"
          command: |
            echo "nvm use default" >> $BASH_ENV
      - run: sudo apt-get update && sudo apt-get install xvfb libgbm-dev build-essential ruby git-lfs
      - run: git lfs install
      - run:
          name: Install FPM (for packaging)
          command: gem install fpm
      - run:
          name: Prepare release signing
          command: |
            echo $SIGN_RELEASE_PUBLIC_KEY >> public.key
            echo $SIGN_RELEASE_PRIVATE_KEY >> private.key
      # The script below ensures that we overwrite some defaults from the official Signal repo
      - run: PUBLIC_KEY="$SIGN_RELEASE_PUBLIC_KEY" SIGNAL_DIR="$CIRCLE_WORKING_DIRECTORY" node ./tmp-automation-release-scripts/patch-files.mjs
      # We need git-lfs for the better-sqlite3 dependency
      - run: which node && which npm && which yarn && which fpm && yarn install --frozen-lockfile
      - run: yarn generate
      - run: yarn prepare-beta-build
      - run:
          command: export USE_SYSTEM_FPM=true && yarn build --publish=never
          environment:
            DISABLE_INSPECT_FUSE: on
      - run: xvfb-run --auto-servernum yarn test-node
      - run:
          command: xvfb-run --auto-servernum yarn test-electron
          environment:
            LANG: en_US
            LANGUAGE: en_US
            # See https://github.com/cypress-io/cypress/issues/25357
            ELECTRON_EXTRA_LAUNCH_ARGS: --disable-gpu
      - run:
          name: Copy release artifacts as store_artifacts doesn't support wildcards
          command: mkdir -p release-binaries && cp release/signal-desktop-unofficial* ./release-binaries
      - store_artifacts:
          path: "release-binaries"
      - run:
          name: Upload .deb file to GitHub Actions Release
          command: |
            cd release-binaries
            FILENAME=$(find signal-desktop-unofficial*.deb -print -quit)
            echo "Will be uploading $FILENAME to GitHub Release"

            # GH adds some weird suffix to their assets URL. Let's remove it: {?name,label}
            UPLOAD_URL="${GITHUB_ACTIONS_RELEASE_UPLOAD_URL/\{\?name,label\}/}"
            echo "Will be uploading to $UPLOAD_URL"

            curl \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${GITHUB_API_TOKEN}"\
              -H "X-GitHub-Api-Version: 2022-11-28" \
              -H "Content-Type: application/octet-stream" \
              "${UPLOAD_URL}?name=$FILENAME" \
              --data-binary "@$FILENAME"
workflows:
  signal:
    when: << pipeline.parameters.ref_to_build >>
    jobs:
      - build